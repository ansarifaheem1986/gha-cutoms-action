name: CustomActionDeployment
on: 
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3 
      - name: Install node 
        uses: actions/setup-node@v3 
        with:
          node-version: '18'
      - name: Build the code
        run: npm install --save-dev @eslint/create-config
      - name: Build the config 
        run: npx create 
      - name: Intial code build 
        run: npm init @eslint/config
      - name: Load & Cache dependencies
        id: cache-depps
        uses: ./.github/actions/cached-deps
        with: 
          caching: 'false'
      - name: Output information
        run: echo "Cache used? ${{ steps.cache.outputs.used-cache }} "
      - name: Lint code 
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3 
      - name: Cache dependencies
        id: cache 
        uses: actions/cache@v3 
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json')}}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci 
      - name: Test code 
        id: run-tests
        run: npm run test 
      - name: Upload test report 
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4 
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code 
        uses: actions/checkout@v3 
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3 
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci 
      - name: Build website
        run: npm run build 
      - name: Upload artifact 
        uses: actions/upload-artifact@v4 
        with:
          name: dist-files 
          path: dist
  deploy: 
    needs: build 
    runs-on: ubuntu-latest
    steps:
      - name: Get code 
        uses: actions/checkout@v3 
      - name: Get build artifact
        uses: actions/download-artifact@v4 
        with:
          name: dist-files
          path: ./dist 
      - name: Output contents 
        run: ls 
      - name: Deploy site 
        run: echo "deploying....."
  information:
    runs-on: ubuntu-latest
    steps:
      - name: Ruyn custome actions
        uses: ./.github/actions/deploy-s3-javascript
